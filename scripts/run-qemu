#!/bin/bash

# Copyright (c) 2018 Bhojpur Consulting Private Limited, India. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

. $(dirname $0)/version
: ${STATE_DIR:=$(dirname $0)/../build/state/bos-$TAG} # unique value per vm instance

set -e

if [ "$ARCH" = "amd64" ]; then
    QEMU_SYSTEM="qemu-system-x86_64"
elif [ "$ARCH" = "arm64" ]; then
    QEMU_SYSTEM="qemu-system-aarch64"
else
    QEMU_SYSTEM="qemu-system-$ARCH"
fi

if [ ! -d $STATE_DIR ]; then
    mkdir -p $STATE_DIR
fi
if [ ! -e $STATE_DIR/${DISK_NAME:=vda.img} ]; then
    qemu-img create -f qcow2 $STATE_DIR/${DISK_NAME} ${DISK_SIZE:=8g}
fi

# Example Usage
## live cd boot
# ./scripts/run-qemu bos.mode=live

## silent install
# DISK_NAME=test.img ./scripts/run-qemu bos.mode=install bos.install.silent bos.install.device=/dev/vda bos.install.power_off=true

## run installed vm
# DISK_NAME=test.img ./scripts/run-qemu bos.password=bhojpur

## recover installed vm
# DISK_NAME=test.img ./scripts/run-qemu bos.password=bhojpur bos.mode=live

exec $QEMU_SYSTEM \
    -m ${MEMORY:=2048} \
    -machine accel=${ACCEL:="hax:kvm:hvf:tcg"} \
    -nographic \
    -serial mon:stdio \
    -rtc base=utc,clock=rt \
    -chardev socket,path=$STATE_DIR/qga.sock,server,nowait,id=qga0 \
    -device virtio-serial \
    -device virtserialport,chardev=qga0,name=org.qemu.guest_agent.0 \
    -kernel $(dirname $0)/../dist/artifacts/bos-vmlinuz-$ARCH \
    -initrd $(dirname $0)/../dist/artifacts/bos-initrd-$ARCH \
    -drive if=ide,media=cdrom,file=$(dirname $0)/../dist/artifacts/bos-$ARCH.iso \
    -drive if=virtio,media=disk,file=$STATE_DIR/${DISK_NAME} \
    -append "console=${CONSOLE:=ttyS0} loglevel=${LOGLEVEL:=4} printk.devkmsg=${PRINTK_DEVKMSG:=on} $*"